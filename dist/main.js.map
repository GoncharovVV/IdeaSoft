{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/my-helper-module.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toggleMenu","btnEl","document","querySelector","addEventListener","target","this","getAttribute","nameClass","classList","toggle","doc","body","removeEventListener","activeElement","blur","nodeName","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","className","classes","j","add","removeClass","remove","hasClass","contains","toggleClass","attr","attrs","arguments","attrName","removeAttr","removeAttribute","data","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","gestures","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","helperModule","Swiper","1024","768","640","320"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = {\r\n    toggleMenu: ()=>{\r\n        const btnEl = document.querySelector('.js-toggle');\r\n        if (btnEl) {\r\n            btnEl.addEventListener('click', function() {\r\n                const target = document.querySelector(this.getAttribute('data-parent')),\r\n                    nameClass = this.getAttribute('data-class');\r\n                    target.classList.toggle(nameClass);\r\n            });\r\n        }\r\n    }\r\n};","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","import Swiper from 'swiper';\r\n    import './main.scss';\r\n    import * as helperModule from './scripts/my-helper-module';\r\nwindow.addEventListener('load', ()=>{\r\n    helperModule.toggleMenu();\r\n    var mySwiper = new Swiper('.slider', {\r\n        slidesPerView: 'auto',\r\n        spaceBetween: 80,\r\n        centeredSlides: true,\r\n        scrollbar: {\r\n            el: '.swiper-scrollbar',\r\n            hide: false,\r\n            snapOnRelease: true,\r\n            dragSize: 140,\r\n            draggable: true\r\n        },\r\n        breakpoints: {\r\n            1024: {\r\n                spaceBetween: 60,\r\n                scrollbar: {\r\n                    dragSize: 120,\r\n                }\r\n            },\r\n                768: {\r\n                spaceBetween: 40,\r\n                scrollbar: {\r\n                    dragSize: 100,\r\n                }\r\n            },\r\n                640: {\r\n                spaceBetween: 30,\r\n                scrollbar: {\r\n                    dragSize: 80,\r\n                }\r\n            },\r\n                320: {\r\n                spaceBetween: 15,\r\n                scrollbar: {\r\n                    dragSize: 60,\r\n                }\r\n            }\r\n        }\r\n    });\r\n    var mySwiper = new Swiper('.slider-big', {\r\n        slidesPerView: 'auto',\r\n        spaceBetween: 30,\r\n        centeredSlides: true,\r\n        breakpoints: {\r\n            640: {\r\n                spaceBetween: 20,\r\n            }\r\n        }\r\n    });\r\n});\r\n"],"sourceRoot":""}